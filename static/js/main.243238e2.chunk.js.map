{"version":3,"sources":["helper.js","jsx/Card.jsx","jsx/CheckBox.jsx","jsx/Logo.jsx","jsx/Header.jsx","App.js","reportWebVitals.js","index.js"],"names":["getAllianceName","initials","Card","className","selected_alliances","this","props","state","airlines","JSON","parse","localStorage","Object","keys","length","filter","airline","map","elem","src","logoURL","alt","name","alliance","phone","site","Math","random","Component","CheckBox","Set","result","type","id","onChange","e","a","isChecked","target","checked","newState","setState","Logo","width","height","viewBox","fill","xmlns","fillRule","clipRule","d","Header","App","useState","alliances","setAlliances","class","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+UACA,SAASA,EAAgBC,GAOrB,OAAGA,EALU,CACT,GAAM,YACN,GAAM,WACN,GAAM,iBAGMA,GAET,K,WCRUC,E,4JACnB,WACE,OACE,qBAAKC,UAAU,WAAf,UDSuBC,ECND,eAAKC,KAAKC,MAAMC,ODMKC,ECNIC,KAAKC,MAAMC,aAAY,UDQ3B,IAA3CC,OAAOC,KAAKT,GAAoBU,OAC3BN,EAGFA,EAASO,QACd,SAACC,GAAD,OAAaA,EAAO,YAAgBZ,MCbmDa,KAAI,SAACC,GAAD,OACrF,sBAAKf,UAAU,6BAAf,UACE,qBACEgB,IAAK,wBAA0BD,EAAKE,QACpCC,IAAKH,EAAKI,KAAO,aAEnB,sBAAKnB,UAAU,sBAAf,UACE,qBAAKA,UAAU,iBAAf,SAAiCe,EAAKI,OAEtC,sBAAKnB,UAAU,uBAAf,UAEqB,SAAlBe,EAAKK,SAAsB,8BAAMvB,EAAgBkB,EAAKK,YAAmB,KAC1E,8BAAML,EAAKM,QACX,qBAAKrB,UAAU,kBAAf,SAAkCe,EAAKO,eAZIP,EAAKI,KAAKI,KAAKC,eDK1E,IAA6BvB,EAAoBI,M,GCZfoB,a,gCCEbC,E,4JACnB,WAAU,IAAD,OACP,OACE,sBAAK1B,UAAU,WAAf,UACE,qBAAKA,UAAU,uBAAf,iCACC,YAAI,IAAI2B,IAAIrB,KAAKC,MAAMC,aAAY,UAAcM,KAAI,SAACC,GAAD,OAAUA,EAAKK,cAClER,QAAO,SAACG,GAAD,MAAmB,SAATA,KACjBD,KAAI,SAACc,GAAD,OACH,wBAAO5B,UAAU,sBAAjB,UACE,uBACE6B,KAAK,WACLC,GAAIF,EACJ5B,UAAU,QACV+B,SAAQ,uCAAE,WAAOC,GAAP,mBAAAC,EAAA,yDAGFC,EAAYF,EAAEG,OAAOC,QACrBN,EAAKE,EAAEG,OAAOL,GACT,GACNA,GAAMjC,EAAgBiC,GACvBO,EAPI,eAOY,EAAKlC,MAAMC,QAE3B8B,EATI,iBAUNG,EAASP,GAAM,OACf,EAAK3B,MAAMmC,SAAX,eAAyBD,IAXnB,sCAaNA,EAAQ,eAAQ,EAAKlC,MAAMC,QACX0B,GAdV,UAeA,EAAK3B,MAAMmC,SAASD,GAfpB,4CAAF,wDAmBTxC,EAAgB+B,KAxByBA,a,GARlBH,aCFjBc,E,4JACnB,WACE,OACE,sBACEC,MAAM,MACNC,OAAO,KACPC,QAAQ,aACRC,KAAK,OACLC,MAAM,6BALR,UAOE,sBACEC,SAAS,UACTC,SAAS,UACTC,EAAE,mMACFJ,KAAK,YAEP,sBACEE,SAAS,UACTC,SAAS,UACTC,EAAE,msBACFJ,KAAK,mB,GApBmBlB,aCAbuB,G,kKACnB,WACE,OACE,qBAAKhD,UAAU,SAAf,SACE,cAAC,EAAD,U,GAJ4ByB,c,8BC0BrBwB,MAhBf,WAEE,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAEA,OACE,gCACE,cAAC,EAAD,IACA,sBAAKC,MAAM,UAAX,UACE,qBAAKA,MAAM,eAAX,sBACF,cAAC,EAAD,CAAUjD,MAAO+C,EAAWb,SAAUc,IACtC,cAAC,EAAD,CAAMhD,MAAO+C,WCXJG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.243238e2.chunk.js","sourcesContent":["// returns the full name of the airline\nfunction getAllianceName(initials)\n{\n    const dict = {\n        \"OW\": \"One World\",\n        \"ST\": \"Sky Team\",\n        \"SA\": \"Star Alliance\",\n    }\n    if(initials){\n        return dict[initials]\n    }\n    return null\n}\n\n// returns the airlines that are in the alliances that are selected\nfunction getFilteredAirlines(selected_alliances, airlines) {\n    // return all the airlines if there are no selected airlines\n  if (Object.keys(selected_alliances).length === 0) {\n    return airlines;\n  }\n//   if an airline has one of the alliances selected, filter it to be returned in an array of matching airlines\n  return airlines.filter(\n    (airline) => airline[\"alliance\"] in selected_alliances\n  );\n}\n\nexport {getAllianceName, getFilteredAirlines}","import React, { Component } from \"react\";\nimport { getAllianceName, getFilteredAirlines } from \"../helper\";\n// class that creates cards\nexport default class Card extends Component {\n  render() {\n    return (\n      <div className=\"css-grid\">\n        {\n          // maps all the airlines from the states that are selected and returns them in the card format\n        getFilteredAirlines({ ...this.props.state }, JSON.parse(localStorage[\"airlines\"])).map((elem) => (\n          <div className=\"card grid-item css-flexbox\" key={elem.name+Math.random()}>\n            <img\n              src={\"https://www.kayak.com\" + elem.logoURL}\n              alt={elem.name + \"/'s Logo\"}\n            />\n            <div className=\"airline-information\">\n              <div className=\"secondary-font\">{elem.name}</div>\n              {/* this is all the hidden information that is seen when a user hovers over a card */}\n              <div className=\"hidden tertiary-font\">\n                {/* if the airline does not have an alliance, do not create a div for the alliance */}\n                {elem.alliance !== \"none\" ? <div>{getAllianceName(elem.alliance)}</div> : null}\n                <div>{elem.phone}</div>\n                <div className=\"quaternary-font\">{elem.site}</div>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n// import { results } from \"../api/dummydata\";\nimport {getAllianceName} from \"../helper\"\n\n// TODO: make the optimization better for filtering the alliances better. find away to search through the array once.\nexport default class CheckBox extends Component {\n  render() {\n    return (\n      <div className=\"checkbox\">\n        <div className=\"secondary-font title\">Filter By Alliances</div>\n        {[...new Set(JSON.parse(localStorage[\"airlines\"]).map((elem) => elem.alliance))]\n          .filter((elem) => elem !== \"none\")\n          .map((result) => (\n            <label className=\"tertiary-font label\" key={result}>\n              <input\n                type=\"checkbox\"\n                id={result}\n                className=\"input\"\n                onChange={async (e) => {\n                  // this function checks if a checkbox is checked and if it is\n                  // it adds or removes it from the react state.\n                  const isChecked = e.target.checked;\n                  const id = e.target.id;\n                  var data = {};\n                  data[id] = getAllianceName(id);\n                  var newState = { ...this.props.state };\n\n                  if (isChecked) {\n                    newState[id] = \"name\";\n                    this.props.setState({ ...newState });\n                  } else {\n                    newState = { ...this.props.state };\n                    delete newState[id];\n                    await this.props.setState(newState);\n                  }\n                }}\n              ></input>\n              {getAllianceName(result)}\n            </label>\n          ))}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\n// based on the SVG file given\nexport default class Logo extends Component {\n  render() {\n    return (\n      <svg\n        width=\"125\"\n        height=\"24\"\n        viewBox=\"0 0 125 24\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M0 23.9998H23.9362V0H0V23.9998ZM25.266 23.9998H49.2021V0H25.266V23.9998ZM74.4681 23.9998H50.5319V0H74.4681V23.9998ZM75.7979 23.9998H99.734V0H75.7979V23.9998ZM125 23.9998H101.064V0H125V23.9998Z\"\n          fill=\"#FF690F\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M10.2868 11.5486V6H7.37988V18H10.2868V12.4516L13.3481 18.0001H16.5562L13.2265 12.0001L16.5562 6.00008H13.3481L10.2868 11.5486ZM35.072 16.2729L34.5515 18.0001H31.4475L35.3948 6.0001H39.0911L43.0206 18.0001H39.8268L39.3063 16.2729H35.072ZM37.1891 9.43643L35.7895 13.9161H38.5887L37.1891 9.43643ZM63.9803 18.0001H61.0736V12.7108L57.144 6.00008H60.6071L62.5448 9.68808L64.4469 6.00008H67.8558L63.9803 12.7108V18.0001ZM85.6039 16.2729L85.0834 18.0001H81.9794L85.9267 6.0001H89.623L93.5523 18.0001H90.3587L89.8382 16.2729H85.6039ZM87.7211 9.43643L86.3215 13.9161H89.1207L87.7211 9.43643ZM111.351 11.5486V6H108.444V18H111.351V12.4516L114.412 18.0001H117.62L114.29 12.0001L117.62 6.00008H114.412L111.351 11.5486Z\"\n          fill=\"#FAFAFC\"\n        />\n      </svg>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Logo from \"./Logo\";\nimport \"../sass/Header.sass\";\nexport default class Header extends Component {\n  render() {\n    return (\n      <div className=\"header\">\n        <Logo></Logo>\n      </div>\n    );\n  }\n}\n","import { useState } from \"react\";\nimport React from \"react\";\nimport Card from \"./jsx/Card\";\nimport CheckBox from \"./jsx/CheckBox\";\nimport Header from \"./jsx/Header\";\n\nimport \"./sass/Card.sass\";\nimport \"./sass/Grid.sass\";\nimport \"./sass/Flexbox.sass\";\nimport \"./sass/Fonts.sass\";\nimport \"./sass/Header.sass\";\nimport \"./sass/Refactor.sass\";\n\nfunction App() {\n  // state\n  const [alliances, setAlliances] = useState({});\n\n  return (\n    <div>\n      <Header></Header>\n      <div class=\"content\">\n        <div class=\"primary-font\">Airlines</div>\n      <CheckBox state={alliances} setState={setAlliances}></CheckBox>\n      <Card state={alliances}></Card>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}